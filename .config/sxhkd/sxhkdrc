#
# bspwm hotkeys
#

# Balance desktop
alt + b
    bspc desktop -B

# Rotate windows 90 degrees
# alt + Tab
#     bspc desktop -R 90

# Swap current window with the biggest
# alt + m
#     bspc window -s biggest

# Create a presel
alt + ctrl + {Left,Down,Up,Right}
    bspc window -p {left,down,up,right}

~button1
    bspc pointer -g focus

# alt + button{1-3}
#     bspc pointer -g {move,resize_side,resize_corner}

# alt + !button{1-3}
#     bspc pointer -t %i %i

alt + !button{1-3}
    bspc pointer -t %i %i

# alt + @button{1-3}
#     bspc pointer -u

#
# wm independent hotkeys
#
shift + Print
    scrot

super + alt + b
  rofi-bluetooth

super + v
  xdo activate -n keepassxc || keepassxc

# super + m
#     amixer set Master toggle

super + r
    rofi -sidebar-mode -combi-modi window,drun -show combi -modi "combi,run,ssh,calc,clipboard:greenclip print"
    #rofi -sidebar-mode -lines 10 -combi-modi window,drun -show combi -modi combi,run,ssh,calc
	#rofi -modi "clipboard:greenclip print" -show clipboard -run-command '{cmd}'
    #XDG_CURRENT_DESKTOP=MATE rofi -sidebar-mode -lines 10 -combi-modi window,drun -show combi -modi combi,run,ssh

# make sxhkd reload its configuration files:
super + Escape
    pkill -USR1 -x sxhkd

XF86MonBrightnessDown
    xbacklight -time 0 -dec 5
    # pkexec brillo -A 5

XF86MonBrightnessUp
    xbacklight -time 0 -inc 5
    # pkexec brillo -U 5

XF86AudioRaiseVolume
	pamixer -i 4 --sink $(pactl list sinks short | grep -i 'RUNNING'| cut -f 2)

XF86AudioLowerVolume
	pamixer -d 4 --sink $(pactl list sinks short | grep -i 'RUNNING'| cut -f 2)

XF86AudioMute
	pamixer -t --sink $(pactl list sinks short | grep -i 'RUNNING'| cut -f 2)

XF86Sleep
	systemctl hybrid-sleep

# XF86AudioPlay
super + F9
  if mpc status | grep -q playing; \
  then \
    mpc toggle; \
  else \
    playerctl play-pause || mpc toggle; \
  fi
    # playerctl --player playerctld play-pause || mpc toggle; \

# XF86AudioNext
super + F11
  playerctl next || mpc next
	# playerctl --player playerctld next || mpc next

# XF86AudioPrev
super + F10
  playerctl previous || mpc prev
  # playerctl --player playerctld previous || mpc prev


#
# wm independent hotkeys
#

# terminal emulator
super + shift + Return
    kitty --single-instance
    # alacritty

# program launcher
# super + @space
# 	dmenu_run

# make sxhkd reload its configuration files:
super + Escape
	pkill -USR1 -x sxhkd

#
# bspwm hotkeys
#

# quit bspwm normally
super + alt + Escape
  pkill conky; pkill panel; bspc quit

# close and kill
# super + {_,shift + }c
# 	bspc node -{c,k}
super + shift + c
	bspc node -c

super + shift + BackSpace
	bspc node -k

# alternate between the tiled and monocle layout
# super + @space
super + m
	bspc desktop -l next

# hide current node/ minimize
# super + alt + n
#     bspc node -g hidden
#
# # un-hide all nodes
# super + shift + n
#     bspc query -N -n .hidden | xargs -I winID bspc node winID -g hidden=off

#super + shift + n
#    bspc node $(bspc query -N -n .hidden | tail -n1) -g hidden=off)


# if the current node is automatic, send it to the last manual, otherwise pull the last leaf
super + Return
	bspc query -N -n focused.automatic && bspc node -n last.!automatic || bspc node last.leaf -n focused

# swap the current node and the biggest node
super + g
	bspc node -s biggest

#
# state/flags
#

# set the window state
super + {t,shift + t,s,f}
	bspc node -t {tiled,pseudo_tiled,floating,fullscreen}

# super + f
#     state=fullscreen; \
#     bspc query -W -w "focused.$state" && state=$(bspc query -T -w | jshon -e client -e lastState -u); \
#     bspc window -t "$state"

# set the node flags
super + ctrl + {x,y,z}
	bspc node -g {locked,sticky,private}

#
# focus/swap
#

# focus the node in the given direction
super + {_,shift + }{h,j,k,l}
	bspc node -{f,s} {west,south,north,east}

# auto_cancel
# super + ctrl + {h,j,k,l}
# 		dir={left,down,up,right}; \
# 		cur=$(bspc query -T -w focused.!automatic | jshon -e splitDir -u 2>&-); \
# 		[ "$dir" = "$cur" ] && dir=cancel; \
# 		bspc window -p "$dir"

# focus the node for the given path jump
# super + {p,b,comma,period}
# 	bspc node -f @{parent,brother,first,second}

# focus the next/previous node in the current desktop
super + {_,shift + }n
	bspc node -f {next,prev}.local

# focus the next/previous desktop in the current monitor
super + bracket{left,right}
	bspc desktop -f {prev,next}.local

super + {comma,period}
	bspc monitor -f {prev,next}

# focus the last node/desktop
super + {grave,Tab}
	bspc {node,desktop} -f last

# focus the older or newer node in the focus history
super + {o,i}
	bspc wm -h off; \
	bspc node {older,newer} -f; \
	bspc wm -h on

# focus or send to the given desktop
super + {_,shift + }{1-9,0}
	bspc {desktop -f,node -d} '^{1-9,10}'

# auto alternate
# super + {_,alt + }{1-9,0}
# 		kind={desktop,monitor}; \
# 		item="^{1-9,10}"; \
# 		bspc query --"$kind"s --"$kind" "$\{item\}.focused" > /dev/null && item=last; \
# 		bspc "$kind" -f "$item"
#
# preselect
#

# preselect the direction
super + ctrl + {h,j,k,l}
	bspc node -p {west,south,north,east}

# preselect the ratio
super + ctrl + {1-9}
	bspc node -o 0.{1-9}

# cancel the preselection for the focused node
super + ctrl + space
	bspc node -p cancel

# cancel the preselection for the focused desktop
super + ctrl + shift + space
	bspc query -N -d | xargs -I id -n 1 bspc node id -p cancel

#
# move/resize
#

# expand a window by moving one of its side outward
super + alt + {h,j,k,l}
	bspc node -z {left -20 0,bottom 0 20,top 0 -20,right 20 0}

# contract a window by moving one of its side inward
super + alt + shift + {h,j,k,l}
	bspc node -z {right -20 0,top 0 20,bottom 0 -20,left 20 0}

# move a floating window
super + {Left,Down,Up,Right}
	bspc node -v {-20 0,0 20,0 -20,20 0}

super + F12
  xdotool search --onlyvisible --classname scratchpad windowunmap \
  || xdotool search --classname scratchpad windowmap \
  || urxvt -name scratchpad -geometry 100+240+1 -e ~/bin/tmux-scratchpad

super + equal
  xdotool search --onlyvisible --classname scratchpad windowunmap \
  || xdotool search --classname scratchpad windowmap \
  || urxvt -name scratchpad -geometry 100+240+1 -e ~/bin/tmux-scratchpad

# tdrop -ma -w -4 -y "$PANEL_HEIGHT" -s Scratchpad --wm bspwm alacritty 
super + F4
  /home/timebomb/bin/layout_switch.sh

super + alt + m
  xdotool search --onlyvisible --classname clerk windowunmap \
  || xdotool search --classname clerk windowmap \
  || urxvt -name clerk -geometry 110x20 -e clerk
  # clerk --no-tmux-ui -t
  # /home/timebomb/bin/mpdmenu
  #
  #
# super + alt + d
#     clerk --no-tmux-ui -t

# screenshots
super + F3
  /home/timebomb/bin/slip

XF86LaunchA
  /home/timebomb/bin/grfkill

super + u
  /home/timebomb/bin/urgentjump

super + p
  /usr/bin/rofi-pass

super + control + p
  /usr/bin/rofi-pass --insert

super + d
  /home/timebomb/bin/opendownloads

super + c
  rofi -modi "clipboard:greenclip print" -show clipboard -run-command '{cmd}'
  # copyq toggle
  # rofi -modi "clipboard:greenclip print" -show clipboard -run-command "{cmd}"
  # /usr/bin/clipmenu
  # /home/timebomb/bin/gpaste-menu

super + alt + s
  /home/timebomb/bin/menu-surfraw

super + alt + n
  /home/timebomb/bin/networkmanager_dmenu

super + control + s
  gpaste-client delete history-size

super + alt + l
  /usr/bin/xfce4-session-logout

  #termite --name=launcher -e "bash -c 'compgen -c | grep -v fzf | sort -u | fzf --layout=reverse | xargs -r swaymsg -t command exec'" for_window '[app_id="^launcher$"]' floating enable, border none, opacity 0.8
  #
  #
alt + super + e
  rofimoji

# hide current node, or restore a queried hidden node
# super + {_,shift} + minus
#   bspc node {,$(bspc query -N -d -n .hidden | head -n 1)} -g hidden
#super + e
#  xprop > ~/xprop.out
