# ~/.tmux.conf

# Informations {{{
# File   : ~/.tmux.conf
# Purpose: Setup file for the terminal multiplexer called "tmux"
# Author : Christian 'strcat' Schneider <strcat@gmx.net>
# NOTE 1 : Lines starting with an '#' are comments.
# NOTE 2 : Used and tested with OpenBSD 4.8, Debian 6.0 and tmux 1.4

# Set the command for new windows to "zsh"
set -g default-command zsh

# control cmus <http://cmus.sourceforge.net/>
# bind -n F7 run-shell 'cmus-remote --pause >/dev/null 2>&1'
# bind -n F10 run-shell 'cmus-remote --next >/dev/null 2>&1'
# bind -n F11 run-shell 'cmus-remote --prev >/dev/null 2>&1'
# bind -n F12 run-shell 'cmus-remote --shuffle >/dev/null 2>&1'

# Create a "np: <song>" or "np: nothing" - Line ("nor-playing.sh" is
# available at <http://strcat.de/hacks/>).

# GNU Emacs keys
# set-window-option -g mode-keys emacs
# set-option -g status-keys emacs
setw -g mode-keys vi
bind-key -t vi-copy 'v' begin-selection
bind-key -t vi-copy 'y' copy-selection


# no one needs a mouse
# set-window-option -g mode-mouse off


# "I' == current window index
# 'H' == Hostname
# 'F' == current window flag
# 'P' == current pane index
# 'S' == Session name
# 'T' == current window title
# 'W' == current window name
# '#' == a literal "#"
# Where appropriate, special character sequences may be prefixed with a
# number to specify the maximum length, in this line "#10W'.
set-window-option -g window-status-format '#I#F #10W '
setw -g window-status-current-format '#I#F #10W'

# toggle last window like screen
bind-key C-a last-window

# confirm before killing a window or the server
bind-key k confirm kill-window
bind-key K confirm kill-server

# ctrl+left/right cycles thru windows
# bind-key -n C-right next
# bind-key -n C-left prev
# bind -n C-left swap-window -t -1
# bind -n C-right swap-window -t +1
bind-key -n C-F9 run-shell "cmus-remote -u"
bind-key -n C-up next
bind-key -n C-down prev
bind-key r source-file ~/.tmux.conf
bind-key S command-prompt -p ssh: "new-window -n %1 'ssh %1'"

# sometimes needed.. maybe..
# setw -g xterm-keys on

# scrollback buffer n lines
set -g history-limit 10000

# listen for activity on all windows
set -g bell-action any

# enable wm window titles
set -g set-titles on

# wm window title string (uses statusbar variables)
set -g set-titles-string '#H: #W'

# default statusbar colors
set -g status-fg cyan
set -g status-bg default
set -g status-attr default
# set -g status-left "#[fg=green]host: (#[default]#[fg=yellow]#H#[default]#[fg=green]) | "
# set -g status-left-length 40
# set -g status-right-length 50
# set -g status-right "#(~/bin/battery Discharging; ~/bin/battery Charging) | %e %B %R | #[fg=red]#(if [[ -a /dev/shm/username/cmus-status ]]; then cat /dev/shm/username/cmus-status | cut -c-70; else echo 'cmus: - stopped -'; fi)"
# set -g status-right "#(~/bin/battery Discharging; ~/bin/battery Charging) | %e %B %R | #[fg=red]#(mpc current | cut -c-70)"
set -g status on
set -g status-interval 2
set -g status-utf8 on
set -g status-left-length 60
set -g status-right-length 90
set -g status-fg colour231
set -g status-bg colour234
set -g status-left-length 20
# set -g status-left '#[fg=colour16,bg=colour254,bold] #S #[fg=colour254,bg=colour234,nobold]#(powerline tmux left)'
set -g status-left '#[fg=colour16,bg=colour254,bold] #S #[fg=colour254,bg=colour234,nobold]#(powerline tmux left)'
set -g status-right '#(powerline tmux right)'
set -g status-right-length 150
# set -g window-status-format "#[fg=colour244,bg=colour234]#I #[fg=colour240] #[fg=colour249]#W "
set -g window-status-format "#[fg=colour244,bg=colour234]#I #[fg=colour240]❯ #[fg=colour249]#W "
# set -g window-status-current-format "#[fg=colour234,bg=colour31]#[fg=colour117,bg=colour31] #I  #[fg=colour231,bold]#W #[fg=colour31,bg=colour234,nobold]"
set -g window-status-current-format "#[fg=colour234,bg=colour31]#[fg=colour117,bg=colour31] #I ❯ #[fg=colour231,bold]#W #[fg=colour31,bg=colour234,nobold]"
# set-option -g status-left "#(~/.dotfiles/powerline/scripts/powerline tmux left)"
set-option -g status-right "#(~/.dotfiles/tmux-powerline/powerline.sh right)"
# set-window-option -g window-status-current-format "#[fg=colour234, bg=colour27]#[fg=colour240, bg=colour18] #I #W #[fg=colour27, bg=colour235]"


# default window title colors
# set-option -g status-utf8 on
# set-option -g visual-activity on
# set-window-option -g monitor-activity on
set -g bell-action any

# active window title colors
set-window-option -g window-status-current-fg yellow
set-window-option -g window-status-current-bg default

# enable 256 color
set -g default-terminal "screen-256color"
set -g terminal-overrides 'xterm*:smcup@:rmcup@'
#                            "*88col*:colors=88,*256col*:colors=256,xterm*:XT"


# New session called ``Worksation''
# new -s Workstation -nCmus ncmpcpp
new -s Workstation -nCmus cmus
neww -t 1 -nMutt  mutt 
# neww -t 2 -nchat  finch
neww -t 2 -nNews  'newsbeuter -o'
neww -t 3 -nIRC weechat-curses
# neww -t 9 -nIrssi irssi
# splitw -h -l 20 'sleep 2 && cat ~/.irssi/nicklistfifo'

# Turn monior-activity for cmus and irssi *off*
set-window-option -t:0 monitor-activity off
# set-window-option -t:2 monitor-activity off
# set-window-option -t:9 monitor-activity off

# Set a space-separated string containing a list of enviâ€ ronment
# variables to be copied into the session environâ€ ment when a new
# session is created or an existing session is attached
set -g update-environment "DISPLAY WINDOWID SSH_ASKPASS SSH_AUTH_SOCK SSH_AGENT_PID SSH_CONNECTION GNOME_KEYRING_PID GNOME_KEYRING_SOCKET DBUS_SESSION_BUS_ADDRESS GPG_AGENT_INFO"
set -g mouse-resize-pane on
set -g mouse-select-pane on
# vim fixes
setw -g xterm-keys on
set -sg escape-time 0

set-option -g pane-active-border-fg black
set-option -g pane-border-fg black

##CLIPBOARD selection integration
##Requires prefix key before the command key
#Copy tmux paste buffer to CLIPBOARD
bind C-c run-shell "tmux show-buffer | xclip -i -selection clipboard"
#Copy CLIPBOARD to tmux paste buffer and paste tmux paste buffer
bind C-v run-shell "tmux set-buffer -- \"$(xclip -o -selection clipboard)\"; tmux paste-buffer"

if-shell 'uname | grep -q Darwin' 'set-option -g default-command "reattach-to-user-namespace -l zsh"'
if-shell 'uname | grep -q Darwin' 'bind C-v run-shell "reattach-to-user-namespace -l zsh -c \"tmux set-buffer -- \'$(pbpaste)\'; tmux paste-buffer\""'
if-shell 'uname | grep -q Darwin' "bind C-c run-shell \"reattach-to-user-namespace -l zsh -c 'tmux show-buffer | pbcopy'\""

bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"
# bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys 'C-\\') || tmux select-pane -l"
# bind-key -n C-j detach
# Screen keys
# Set the prefix to ^A.
# unbind C-b
# set -g prefix ^A
# bind a send-prefix

