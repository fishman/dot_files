#!/bin/zsh

# prozesse finden (ps -ef | grep prozess)
function psgr()
{
	FIRST=`echo $1 | sed -e 's/^\(.\).*/\1/'`
	REST=`echo $1 | sed -e 's/^.\(.*\)/\1/'`
	ps -ef | grep -v "$0" | grep "[$FIRST]$REST"
}

function calc() { gawk "BEGIN{ print $* }"; }
function hcalc() { gawk -v CONVFMT="%x\n" "BEGIN{printf CONVFMT, $* }"; }

#growl() { echo -e $'\e]9;'${1}'\007' ; return  ; }

function sftp()
{
  lftp sftp://$1
}

function showlog()
{
  cat $1 | sed '/ *#/d; /^ *$/d'
}

function mc()
{
  stty -ixon
  /usr/bin/env mc $@
  stty ixon
}

function flv2ipod()
{
    ffmpeg -i $1 -acodec copy $1.aac
    ffmpeg -i $1.aac -ab 193k -strict -2 $1.m4a
}

function extract () {
    if [ -f $1 ] ; then
      filename=$(basename "$1")
      filename="${filename%.*}"
      mkdir -p "${filename}" && cd "${filename}";

      case $1 in
        *.tar.bz2)   tar xjf ../$1     ;;
        *.tar.gz)    tar xzf ../$1     ;;
        *.bz2)       bunzip2 ../$1     ;;
        *.rar)       unrar e ../$1     ;;
        *.gz)        gunzip ../$1      ;;
        *.tar)       tar xf ../$1      ;;
        *.tbz2)      tar xjf ../$1     ;;
        *.tgz)       tar xzf ../$1     ;;
        *.zip)       unzip ../$1       ;;
        *.Z)         uncompress ../$1  ;;
        *.7z)        7z x ../$1        ;;
        *)     echo "'$1' cannot be extracted via extract()" ;;
        esac
        cd ..
     else
         echo "'$1' is not a valid file"
     fi
}


function tohex()
{
   echo "ibase=A;obase=16;$1" | bc
}

function todec()
{
   echo "ibase=16;obase=A;$1" | bc
}

# go back x directories
# function b() {
#     str=""
#     count=0
#     while [ "$count" -lt "$1" ];
#     do
#         str=$str"../"
#         let count=count+1
#     done
#     cd $str
# }

function zipfolder()
{
    zip -9 -r $1 $2
}

[[ -x ${EPREFIX}/usr/libexec/mc/mc.sh ]] && . ${EPREFIX}/usr/libexec/mc/mc.sh

ranger-cd() {
    tempfile=$(mktemp)
    ranger --choosedir="$tempfile" "${@:-$(pwd)}" < $TTY
    test -f "$tempfile" &&
    if [ "$(cat -- "$tempfile")" != "$(echo -n `pwd`)" ]; then
        cd -- "$(cat "$tempfile")"
    fi
    rm -f -- "$tempfile"
}

# bind Ctrl-O to ranger-cd:
zle -N ranger-cd
bindkey '^o' ranger-cd

# URL encode something and print it.
function url-encode; {
    setopt extendedglob
    echo "${${(j: :)@}//(#b)(?)/%$[[##16]##${match[1]}]}"
}

# Search google for the given keywords.
function google() {
    $VIEW "http://www.google.com/search?q=`url-encode "${(j: :)@}"`"
}
